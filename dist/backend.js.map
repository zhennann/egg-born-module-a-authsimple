{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/external \"util\"","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/controller/auth.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/service/auth.js","webpack://backend//Users/wind/Documents/data/cabloy/egg-born-demo/node_modules/password-hash-and-salt/index.js","webpack://backend//Users/wind/Documents/data/cabloy/egg-born-demo/node_modules/password-hash-and-salt/lib/hashsalt.js","webpack://backend/external \"crypto\"","webpack://backend/./backend/src/models.js","webpack://backend/./backend/src/model/auth.js","webpack://backend/./backend/src/model/authProvider.js","webpack://backend/./backend/src/model/authSimple.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/config/passport/auth.js","webpack://backend/./backend/src/config/passport/strategy.js","webpack://backend//Users/wind/Documents/data/cabloy/egg-born-demo/node_modules/passport-strategy/lib/index.js","webpack://backend//Users/wind/Documents/data/cabloy/egg-born-demo/node_modules/passport-strategy/lib/strategy.js","webpack://backend/./backend/src/config/validation/schemas.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA,iC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;;AAEA;AACA,GAAG,oFAAoF;AACvF,GAAG,kFAAkF;AACrF,GAAG,iFAAiF;AACpF,GAAG,2EAA2E;AAC9E,GAAG;AACH,WAAW,YAAY,sBAAsB,EAAE;AAC/C,GAAG;AACH,GAAG;AACH,WAAW,YAAY,qBAAqB,EAAE;AAC9C,GAAG;AACH;;;;;;;ACdA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpBA;AACA;;AAEA;AACA,aAAa,mBAAmB;AAChC,mCAAmC,mBAAmB;AACtD;AACA;;AAEA;AACA,aAAa,8CAA8C;AAC3D,sCAAsC,8CAA8C;AACpF;AACA;;AAEA;AACA,aAAa,2BAA2B;AACxC,qCAAqC,2DAA2D;AAChG;AACA;;AAEA;AACA;AACA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2FAA2F;AAC7H,SAAS;AACT;AACA,mDAAmD,mBAAmB;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;;;;;AC/CA;AACA;AACA;AACA;;AAEA,kBAAkB,8CAA8C;AAChE,sDAAsD,oCAAoC;AAC1F,sBAAsB,mBAAmB;AACzC;AACA;;AAEA,eAAe,mBAAmB;AAClC;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA,OAAO;AACP;AACA,yCAAyC,4BAA4B;AACrE;;AAEA,iBAAiB,mCAAmC;AACpD;AACA,qCAAqC,gCAAgC;AACrE;AACA;AACA;AACA;AACA,OAAO;AACP,6CAA6C,wBAAwB;AACrE;AACA;AACA;AACA,OAAO;AACP;;AAEA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;;AAEA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC3EA;;AAEA,wC;;;;;;;ACFA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,E;AACL,IAAI;AACJ;AACA,I;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+C;AACA,IAAI,E;AACJ;AACA;AACA;;;AAGA;;;;;;;AClEA,mC;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACRA;;AAEA;;AAEA;AACA,kBAAkB,2BAA2B,uBAAuB,EAAE;AACtE;;AAEA;;AAEA;AACA;;;;;;;ACXA;;AAEA;;AAEA;AACA,kBAAkB,mCAAmC,uBAAuB,EAAE;AAC9E;;AAEA;;AAEA;AACA;;;;;;;ACXA;;AAEA;;AAEA;AACA,kBAAkB,iCAAiC,uBAAuB,EAAE;AAC5E;;AAEA;;AAEA;AACA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA,wCAAwC,kCAAkC;AAC1E;AACA,6CAA6C,4CAA4C;AACzF;AACA;AACA;AACA;AACA,kDAAkD,4BAA4B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB,WAAW,EAAE;AAC1C,WAAW;AACX;AACA,OAAO;AACP,KAAK;AACL;AACA;;;;;;;ACzCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAiE;;AAEjF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC,gBAAgB,wBAAwB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;ACzCA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC,OAAO;AACP,KAAK;AACL;AACA;AACA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"util\");","const routes = require('./routes.js');\nconst services = require('./services.js');\nconst models = require('./models.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst metaFn = require('./meta.js');\n\nmodule.exports = app => {\n  return {\n    routes,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta: metaFn(app),\n  };\n};\n","const version = require('./controller/version.js');\nconst auth = require('./controller/auth.js');\n\nmodule.exports = [\n  { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n  { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n  { method: 'post', path: 'version/test', controller: version, middlewares: 'test' },\n  { method: 'post', path: 'auth/add', controller: auth, middlewares: 'inner' },\n  { method: 'post', path: 'auth/signup', controller: auth, middlewares: 'validate',\n    meta: { validate: { validator: 'signup' } },\n  },\n  { method: 'post', path: 'auth/reset', controller: auth, middlewares: 'validate',\n    meta: { validate: { validator: 'reset' } },\n  },\n];\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async test() {\n      await this.service.version.test(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","module.exports = app => {\n  class AuthController extends app.Controller {\n\n    async add() {\n      const { userId, password } = this.ctx.request.body;\n      await this.service.auth.add({ userId, password });\n      this.ctx.success();\n    }\n\n    async signup() {\n      const { userName, realName, email, mobile, password } = this.ctx.request.body.data;\n      await this.service.auth.signup({ userName, realName, email, mobile, password });\n      this.ctx.success();\n    }\n\n    async reset() {\n      const { passwordOld, passwordNew } = this.ctx.request.body.data;\n      await this.service.auth.reset({ passwordOld, passwordNew, userId: this.ctx.user.agent.id });\n      this.ctx.success();\n    }\n\n  }\n  return AuthController;\n};\n","const version = require('./service/version.js');\nconst auth = require('./service/auth.js');\nmodule.exports = {\n  version,\n  auth,\n};\n","module.exports = app => {\n  class Version extends app.Service {\n\n    async update(options) {\n      if (options.version === 1) {\n        // create table: aStatus\n        const sql = `\n          CREATE TABLE aAuthSimple (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            userId int(11) DEFAULT '0',\n            hash text DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n    async init(options) {\n      if (options.version === 1) {\n        // provider\n        const info = this.ctx.module.info;\n        await this.ctx.model.authProvider.insert({\n          module: info.relativeName,\n          providerName: info.name,\n          config: JSON.stringify({ successReturnToOrRedirect: false, successRedirect: false, addUser: false, addRole: false }),\n        });\n        // root\n        const user = await this.ctx.meta.user.get({ userName: 'root' });\n        await this.ctx.service.auth.add({\n          userId: user.id,\n          password: options.password,\n        });\n      }\n    }\n\n    async test() {\n\n    }\n\n  }\n\n  return Version;\n};\n","const util = require('util');\nconst passwordFn = require('password-hash-and-salt');\nmodule.exports = app => {\n  class Auth extends app.Service {\n\n    async signup({ userName, realName, email, mobile, password }) {\n      const userId = await this.ctx.meta.user.signup({ userName, realName, email, mobile });\n      await this.add({ userId, password });\n      return userId;\n    }\n\n    async add({ userId, password }) {\n      password = password || this.ctx.config.defaultPassword;\n      const hash = await this._calcPassword({ password });\n      // auth simple\n      await this.ctx.model.authSimple.insert({\n        userId,\n        hash,\n      });\n      // auth\n      const info = this.ctx.module.info;\n      const providerItem = await this.ctx.model.authProvider.get({\n        module: info.relativeName,\n        providerName: info.name,\n      });\n      await this.ctx.model.auth.insert({\n        userId,\n        providerId: providerItem.id,\n        profileId: userId,\n        profile: JSON.stringify({\n          userId,\n          rememberMe: false,\n        }),\n      });\n    }\n\n    async verify({ userId, password }) {\n      if (!password) return false;\n      const auth = await this.ctx.model.authSimple.get({\n        userId,\n      });\n      if (!auth) return false;\n      return await this._verifyPassword({ password, hash: auth.hash });\n    }\n\n    async reset({ passwordOld, passwordNew, userId }) {\n      // verify old\n      const res = await this.verify({ userId, password: passwordOld });\n      if (!res) this.ctx.throw(403);\n      // save new\n      const auth = await this.ctx.model.authSimple.get({\n        userId,\n      });\n      const hash = await this._calcPassword({ password: passwordNew });\n      await this.ctx.model.authSimple.update({\n        id: auth.id,\n        hash,\n      });\n    }\n\n    async _calcPassword({ password }) {\n      const _password = passwordFn(password.toString());\n      const hashFn = util.promisify(_password.hash);\n      return await hashFn.call(_password);\n    }\n\n    async _verifyPassword({ password, hash }) {\n      const _password = passwordFn(password.toString());\n      const verifyFn = util.promisify(_password.verifyAgainst);\n      return await verifyFn.call(_password, hash);\n    }\n\n  }\n\n  return Auth;\n};\n","'use strict';\n\nmodule.exports = require('./lib/hashsalt.js');","'use strict';\n\nvar crypto = require('crypto');\n\nvar iterations = 10000;\nvar password = function(password) {\n\treturn {\n\t\thash: function(salt, callback) {\n\t\t\t// Make salt optional\n\t\t\tif(callback === undefined && salt instanceof Function) {\n\t\t\t\tcallback = salt;\n\t\t\t\tsalt = undefined;\n\t\t\t}\n\n\t\t\tif(!password) {\n\t\t\t\treturn callback('No password provided')\n\t\t\t}\n\n\t\t\tif(typeof salt === 'string') {\n\t\t\t\tsalt = new Buffer(salt, 'hex');\n\t\t\t}\n\n\t\t\tvar calcHash = function() {\n\t\t\t\tcrypto.pbkdf2(password, salt, iterations, 64, 'sha1', function(err, key) {\n\t\t\t\t\tif(err)\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\tvar res = 'pbkdf2$' + iterations + \n\t\t\t\t\t\t\t\t'$' + key.toString('hex') + \n\t\t\t\t\t\t\t\t'$' + salt.toString('hex');\n\t\t\t\t\tcallback(null, res);\n\t\t\t\t})\t\t\n\t\t\t};\n\n\t\t\tif(!salt) {\n\t\t\t\tcrypto.randomBytes(64, function(err, gensalt) {\n\t\t\t\t\tif(err)\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\tsalt = gensalt;\n\t\t\t\t\tcalcHash();\n\t\t\t\t});\t\t\n\t\t\t} else {\n\t\t\t\tcalcHash();\n\t\t\t}\t\t\t\n\t\t},\n\n\t\tverifyAgainst: function(hashedPassword, callback) {\n\t\t\tif(!hashedPassword || !password)\n\t\t\t\treturn callback(null, false);\n\n\t\t\tvar key = hashedPassword.split('$');\n\t\t\tif(key.length !== 4 || !key[2] || !key[3])\n\t\t\t\treturn callback('Hash not formatted correctly');\n\n\t\t\tif(key[0] !== 'pbkdf2' || key[1] !== iterations.toString())\n\t\t\t\treturn callback('Wrong algorithm and/or iterations');\n\n\t\t\tthis.hash(key[3], function(error, newHash) {\n\t\t\t\tif(error)\n\t\t\t\t\treturn callback(error);\n\t\t\t\tcallback(null, newHash === hashedPassword);\t\t\t\t\n\t\t\t});\t\n\t\t}\n\t};\n}\n\n\nmodule.exports = password;\n","module.exports = require(\"crypto\");","const auth = require('./model/auth.js');\nconst authProvider = require('./model/authProvider.js');\nconst authSimple = require('./model/authSimple.js');\n\nmodule.exports = {\n  auth,\n  authProvider,\n  authSimple,\n};\n","module.exports = app => {\n\n  class Auth extends app.meta.Model {\n\n    constructor(ctx) {\n      super(ctx, { table: 'aAuth', options: { disableDeleted: true } });\n    }\n\n  }\n\n  return Auth;\n};\n","module.exports = app => {\n\n  class AuthProvider extends app.meta.Model {\n\n    constructor(ctx) {\n      super(ctx, { table: 'aAuthProvider', options: { disableDeleted: true } });\n    }\n\n  }\n\n  return AuthProvider;\n};\n","module.exports = app => {\n\n  class AuthSimple extends app.meta.Model {\n\n    constructor(ctx) {\n      super(ctx, { table: 'aAuthSimple', options: { disableDeleted: true } });\n    }\n\n  }\n\n  return AuthSimple;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {\n    defaultPassword: '123456',\n  };\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n  'Authentication failed': '认证失败',\n  'User is disabled': '用户被禁用',\n  'Auth-Simple': '认证-简单',\n  'Reset password': '重置密码',\n};\n","// error code should start from 1001\nmodule.exports = {\n  1001: 'Authentication failed',\n  1002: 'User is disabled',\n};\n","module.exports = app => {\n  const auth = require('./config/passport/auth.js')(app);\n  const schemas = require('./config/validation/schemas.js')(app);\n  return {\n    auth,\n    validation: {\n      validators: {\n        signup: {\n          schemas: 'signup',\n        },\n        signin: {\n          schemas: 'signin',\n        },\n        reset: {\n          schemas: 'reset',\n        },\n      },\n      schemas: {\n        signup: schemas.signup,\n        signin: schemas.signin,\n        reset: schemas.reset,\n      },\n    },\n    user: {\n      functions: {\n        resetPassword: {\n          title: 'Reset password',\n          actionPath: 'reset',\n        },\n      },\n    },\n  };\n};\n","const strategy = require('./strategy.js');\nmodule.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const provider = moduleInfo.name;\n  async function verify(ctx, body) {\n    const { auth, password, rememberMe } = body;\n    // validate\n    await ctx.meta.validation.validate({ validator: 'signin', data: body });\n    // exists\n    const user = await ctx.meta.user.exists({ userName: auth, email: auth, mobile: auth });\n    if (!user) return ctx.throw(1001);\n    // disabled\n    if (user.disabled) return ctx.throw(1002);\n    // verify\n    const verify = await ctx.service.auth.verify({ userId: user.id, password });\n    if (!verify) return ctx.throw(1001);\n    return {\n      module: moduleInfo.relativeName,\n      provider,\n      profileId: user.id,\n      maxAge: rememberMe ? null : 0,\n      profile: {\n        userId: user.id,\n        rememberMe,\n      },\n    };\n  }\n  return {\n    providers: {\n      [provider]: app => {\n        return {\n          strategy,\n          callback: (req, body, done) => {\n            verify(req.ctx, body).then(user => {\n              app.passport.doVerify(req, user, done);\n            }).catch(err => { done(err); });\n          },\n        };\n      },\n    },\n  };\n};\n","const passport = require('passport-strategy');\nconst util = require('util');\n\nfunction Strategy(options, verify) {\n  if (typeof options === 'function') {\n    verify = options;\n    options = {};\n  }\n  if (!verify) { throw new TypeError('LocalStrategy requires a verify callback'); }\n\n  passport.Strategy.call(this);\n  this.name = 'simple';\n  this._verify = verify;\n  this._passReqToCallback = options.passReqToCallback;\n}\n\n/**\n * Inherit from `passport.Strategy`.\n */\nutil.inherits(Strategy, passport.Strategy);\n\nStrategy.prototype.authenticate = function(req) {\n  const self = this;\n  function verified(err, user, info) {\n    if (err) { return self.error(err); }\n    if (!user) { return self.fail(info); }\n    req.ctx.success(user);\n    self.success(user, info);\n  }\n\n  try {\n    if (self._passReqToCallback) {\n      this._verify(req, req.body, verified);\n    } else {\n      this._verify(req.body, verified);\n    }\n  } catch (ex) {\n    return self.error(ex);\n  }\n};\n\nmodule.exports = Strategy;\n","/**\n * Module dependencies.\n */\nvar Strategy = require('./strategy');\n\n\n/**\n * Expose `Strategy` directly from package.\n */\nexports = module.exports = Strategy;\n\n/**\n * Export constructors.\n */\nexports.Strategy = Strategy;\n","/**\n * Creates an instance of `Strategy`.\n *\n * @constructor\n * @api public\n */\nfunction Strategy() {\n}\n\n/**\n * Authenticate request.\n *\n * This function must be overridden by subclasses.  In abstract form, it always\n * throws an exception.\n *\n * @param {Object} req The request to authenticate.\n * @param {Object} [options] Strategy-specific options.\n * @api public\n */\nStrategy.prototype.authenticate = function(req, options) {\n  throw new Error('Strategy#authenticate must be overridden by subclass');\n};\n\n\n/**\n * Expose `Strategy`.\n */\nmodule.exports = Strategy;\n","module.exports = app => {\n  const schemas = {};\n  schemas.signup = {\n    type: 'object',\n    properties: {\n      userName: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Username',\n        notEmpty: true,\n      },\n      realName: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Realname',\n        notEmpty: true,\n      },\n      email: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Email',\n        notEmpty: true,\n        format: 'email',\n      },\n      mobile: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Mobile',\n        notEmpty: true,\n      },\n      password: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Password',\n        ebSecure: true,\n        notEmpty: true,\n        minLength: 6,\n      },\n      passwordAgain: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Password again',\n        ebSecure: true,\n        notEmpty: true,\n        const: { $data: '1/password' },\n      },\n    },\n  };\n  schemas.signin = {\n    type: 'object',\n    properties: {\n      auth: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Your mobile/email',\n        notEmpty: true,\n      },\n      password: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Your password',\n        ebSecure: true,\n        notEmpty: true,\n        minLength: 6,\n      },\n      rememberMe: {\n        type: 'boolean',\n        ebType: 'toggle',\n        ebTitle: 'Remember me',\n      },\n    },\n  };\n  schemas.reset = {\n    type: 'object',\n    properties: {\n      passwordOld: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Old password',\n        ebSecure: true,\n        notEmpty: true,\n        minLength: 6,\n      },\n      passwordNew: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'New password',\n        ebSecure: true,\n        notEmpty: true,\n        minLength: 6,\n      },\n      passwordNewAgain: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'New password again',\n        ebSecure: true,\n        notEmpty: true,\n        const: { $data: '1/passwordNew' },\n      },\n    },\n  };\n  return schemas;\n};\n"],"sourceRoot":""}